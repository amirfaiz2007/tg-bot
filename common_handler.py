from aiogram.filters import Command
from aiogram.types import Message, InputMediaPhoto
from markup import menu_points, oge, ege, ege_prof, help_points, link_keyboard
from aiogram import Router
from aiogram.fsm.context import FSMContext
from markup import menu_button, form_button
from states import Form, Menu



router = Router()
data = []


@router.message(Menu.menu)
async def menu(message: Message, state: FSMContext):
    await state.set_state(Menu.point_1)
    await message.answer (text="<b>–ú–µ–Ω—é:</b>\n\n–ó–∞–¥–∞–Ω–∏—è –û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.üìù"
            "\n\n–ó–∞–¥–∞–Ω–∏—è –ï–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.üë®üèª‚Äçüéì"
            "\n\n–ó–∞–¥–∞–Ω–∏—è –ï–ì–≠ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.ü§ì", reply_markup=menu_points, parse_mode="html")


@router.message(Menu.point_1)
async def menu_actions(message: Message, state: FSMContext):
    if message.text.lower() == "–∑–∞–¥–∞–Ω–∏—è –æ–≥—ç –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.üìù":
        await message.answer(text="<b>–ó–∞–¥–∞–Ω–∏—è –û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.</b>\n –ù–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", reply_markup= oge, parse_mode="html")
    elif message.text.lower() == "–∑–∞–¥–∞–Ω–∏—è –µ–≥—ç –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.üë®üèª‚Äçüéì":
        await message.answer(text="<b>–ó–∞–¥–∞–Ω–∏—è –ï–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.</b>\n–ù–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", reply_markup= ege, parse_mode="html")
    elif message.text.lower() == "–∑–∞–¥–∞–Ω–∏—è –µ–≥—ç –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.ü§ì":
        await message.answer(text="<b>–ó–∞–¥–∞–Ω–∏—è –ï–ì–≠ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.</b>\n–ù–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", reply_markup= ege_prof, parse_mode="html")
    elif message.text == "/about":
        text = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"
        await message.answer(text=text, reply_markup=link_keyboard)
        await message.delete()
    elif message.text == "/start":
        await state.set_state(Form.wait)
    elif message.text == "/menu":
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ –≤—ã –∏ —Ç–∞–∫ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é")
    else:
        await state.set_state(Menu.point_2)
        text = '–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å'
        await message.answer(text=text)

@router.message(Menu.point_2)
async def help(message: Message, state: FSMContext):
    await state.set_state(Menu.point_3)
    text = "–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞‚ñ∂Ô∏è\n–ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ãüÜò\n–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ‚ùó\n–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞‚ôæÔ∏è"
    await message.answer(text=text, reply_markup=help_points, parse_mode="html")
    await message.delete()



@router.message(Menu.point_3)
async def help_actions(message: Message, state: FSMContext):
    if message.text.lower() == "–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∑–∞–Ω–æ–≤–æ‚ñ∂Ô∏è" or message.text == "/start":
        await state.set_state(Form.wait)
        text = "–ü—Ä–∏–≤–µ—Ç! –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∫–µ—Ç—É. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–µ–Ω–∏—é"
        await message.answer(text=text, reply_markup=form_button)
        # await message.answer(text="–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é", reply_markup=menu_button)
        media_group = [InputMediaPhoto(
            media="AgACAgIAAxkBAAICSGZte2OWf6pYcisGeUy0cIJI_IymAAJx4DEbkQABaEvhKak6Ka0h1QEAAwIAA3kAAzUE"),
                       InputMediaPhoto(
                           media="AgACAgIAAxkBAAICTGZtffoQ_axKJc47VXKwvIsvqdYdAAJ54DEbkQABaEsxgAKJict2qQEAAwIAA3kAAzUE"),
                       InputMediaPhoto(
                           media="AgACAgIAAxkBAAICTWZtfoJP2uPl2Ip5SNPGx9MRiajeAAJ_4DEbkQABaEuTdrc85s60dAEAAwIAA3kAAzUE")
                       ]
        await message.answer_media_group(media=media_group)
    elif message.text.lower() == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞‚ôæÔ∏è" or message.text == "/menu":
        await state.set_state(Menu.point_1)
        await message.answer(text="<b>–ú–µ–Ω—é:</b>\n\n–ó–∞–¥–∞–Ω–∏—è –û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.üìù"
                                  "\n\n–ó–∞–¥–∞–Ω–∏—è –ï–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.üë®üèª‚Äçüéì"
                                  "\n\n–ó–∞–¥–∞–Ω–∏—è –ï–ì–≠ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.ü§ì", reply_markup=menu_points,
                             parse_mode="html")
    elif message.text.lower() == "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ‚ùó" or message.text == "/about":
        await message.answer(text="–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ‚ùó", reply_markup=link_keyboard)
    else:
        await message.answer(text="–ò–∑–≤–∏–Ω–∏—Ç–µ —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É")









